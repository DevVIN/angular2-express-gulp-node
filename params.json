{
  "name": "Angular2-Express-Node-Gulp",
  "tagline": "Angular 2 - Quick start application with Express + Gulp + Type Script + Node",
  "body": "# Angular2 Gulp, Typescript, NodeJS and Express\r\n\r\n##Introduction\r\n\r\nBasic Angular seed application created with Quick start application given on angular website (https://angular.io/docs/ts/latest/quickstart.html). It uses Typescript, Gulp for tasks like build, compile, install etc and ExpressJS as server. The application basically involve both client(Angular2) and server(Express and Node).\r\n\r\n([Github Directory(Source Code)](https://github.com/moizKachwala/angular2-express))\r\n\r\n##Getting Started\r\n\r\nBefore we start make sure you have NodeJS installed in your machine.If not then you can download and install NodeJS from (https://nodejs.org/en/)\r\n\r\n##Project Setup\r\n\r\nCreate a new directory and install dependencies. This will create a folder and will add the package.json in the folder.\r\n\r\n```\r\nmkdir Angular2-express\r\ncd Angular2-express\r\nnpm init -y\r\n```\r\n\r\nNow Add dependencies to your package.json.\r\n\r\n```\r\n\"dependencies\": {\r\n    \"angular2\": \"^2.0.0-beta.17\",\r\n    \"es6-promise\": \"^3.2.1\",\r\n    \"es6-shim\": \"^0.35.1\",\r\n    \"express\": \"^4.13.4\",\r\n    \"gulp-concat\": \"^2.6.0\",\r\n    \"reflect-metadata\": \"^0.1.2\",\r\n    \"rxjs\": \"^5.0.0-beta.6\",\r\n    \"systemjs\": \"^0.19.29\",\r\n    \"zone\": \"^0.3.4\"\r\n  }\r\n```\r\n\r\nAnd your dev dependencies.\r\n\r\n```\r\n \"devDependencies\": {\r\n    \"concurrently\": \"^2.1.0\",\r\n    \"del\": \"^2.2.0\",\r\n    \"gulp\": \"^3.9.1\",\r\n    \"gulp-concat\": \"^2.6.0\",\r\n    \"gulp-nodemon\": \"^2.1.0\",\r\n    \"gulp-sourcemaps\": \"^1.6.0\",\r\n    \"gulp-tslint\": \"^4.3.3\",\r\n    \"gulp-typescript\": \"^2.13.6\",\r\n    \"gulp-typings\": \"^2.0.0\",\r\n    \"run-sequence\": \"^1.2.1\",\r\n    \"tslint\": \"^3.5.0\"\r\n  }\r\n```\r\n\r\nNow install all the dependencies by opening the created folder in command prompt and fire following command.\r\n\r\n`npm install`\r\n\r\nOnce you have done `npm install`, you will find a node_modules folder in your directory. This holds all the dependencies that we added in package.json. Now create a file **gulpfile.ts** and  two folders in your project **client** and **server**.\r\n\r\nOur folder structure will look something like this.\r\n\r\n```\r\nangular2-express\r\n      |-- node_modules\r\n      |-- client\r\n      |-- server\r\n      gulpfile.ts\r\n```\r\n\r\nNow as we have taken gulpfile.ts we need to tell how to compile the ts file by adding tsconfig.json. This also set the outDir which we will be handling later. We have also added exclude option so we don't want typescript to go and compile those directives/files.\r\n\r\n```\r\n{\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"build/app\",\r\n    \"target\": \"es5\",\r\n    \"module\": \"system\",\r\n    \"moduleResolution\": \"node\",\r\n    \"sourceMap\": true,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"removeComments\": false,\r\n    \"noImplicitAny\": false\r\n  },\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"typings\",\r\n    \"typings/index.d.ts\"\r\n  ]\r\n}\r\n```\r\n\r\nSo now we have done with the basic structure we will start implementing Server for our application.\r\n\r\n##Server Setup\r\n\r\nFirst thing we need to do is create a tsconfig.json inside server folder.This will tell our typescript compiler how to compile our .ts extension files.\r\n\r\nLet's create tsconfig.json in /server folder with following content.\r\n\r\n```\r\n{\r\n  \"compilerOptions\": {\r\n    \"target\": \"ES5\",\r\n    \"module\": \"commonjs\",\r\n    \"sourceMap\": true,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"removeComments\": false,\r\n    \"noImplicitAny\": false\r\n  },\r\n  \"exclude\": [\r\n    \"typings\"\r\n  ]\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}